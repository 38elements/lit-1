{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "Patch": {
            "additionalProperties": false,
            "description": "Replace one string with another.",
            "properties": {
                "after": {
                    "description": "The string to replace matches with.",
                    "type": "string"
                },
                "before": {
                    "description": "The string to search for.",
                    "type": "string"
                }
            },
            "required": [
                "after",
                "before"
            ],
            "type": "object"
        },
        "XlbConfig": {
            "additionalProperties": false,
            "description": "Parse an XLB XML file. These files contain translations organized using the\nsame message names that we originally requested.\nConfiguration for XLB interchange format.",
            "properties": {
                "format": {
                    "enum": [
                        "xlb"
                    ],
                    "type": "string"
                },
                "outputFile": {
                    "description": "Output path on disk to the XLB XML file that will be created containing all\nmessages extracted from the source. E.g. \"data/localization/en.xlb\".",
                    "type": "string"
                },
                "translationsGlob": {
                    "description": "Glob pattern of XLB XML files to read from disk containing translated\nmessages. E.g. \"data/localization/*.xlb\".\n\nSee https://github.com/isaacs/node-glob#README for valid glob syntax.",
                    "type": "string"
                }
            },
            "required": [
                "format",
                "outputFile",
                "translationsGlob"
            ],
            "type": "object"
        },
        "XliffConfig": {
            "additionalProperties": false,
            "description": "Configuration for XLIFF interchange format.",
            "properties": {
                "format": {
                    "enum": [
                        "xliff"
                    ],
                    "type": "string"
                },
                "xliffDir": {
                    "description": "Directory on disk to read/write .xlf XML files. For each target locale,\nthe file path \"<xliffDir>/<locale>.xlf\" will be used.",
                    "type": "string"
                }
            },
            "required": [
                "format",
                "xliffDir"
            ],
            "type": "object"
        }
    },
    "properties": {
        "$schema": {
            "description": "See https://json-schema.org/understanding-json-schema/reference/schema.html",
            "type": "string"
        },
        "interchange": {
            "anyOf": [
                {
                    "$ref": "#/definitions/XlbConfig"
                },
                {
                    "$ref": "#/definitions/XliffConfig"
                }
            ],
            "description": "Localization interchange format and configuration specific to that format."
        },
        "patches": {
            "additionalProperties": {
                "additionalProperties": {
                    "items": {
                        "$ref": "#/definitions/Patch"
                    },
                    "type": "array"
                },
                "type": "object"
            },
            "description": "Optional string substitutions to apply to specific locale messages. Useful\nfor making minor corrections without modifying source files or repeating a\nfull localization cycle.\n\nExample:\n\n\"patches\": {\n   \"es-419\": {\n     \"greeting\": [\n       {\n         \"before\": \"Buenos dias\",\n         \"after\": \"Buenos d√≠as\"\n       }\n     ]\n   }\n}",
            "type": "object"
        },
        "sourceLocale": {
            "description": "Required locale code that messages in the source code are written in.",
            "type": "string"
        },
        "targetLocales": {
            "description": "Required locale codes that messages will be localized to.",
            "type": "string[]"
        },
        "tsConfig": {
            "description": "Path to a tsconfig.json file that describes the TypeScript source files\nfrom which messages will be extracted.",
            "type": "string"
        },
        "tsOut": {
            "description": "Required path to the directory where generated TypeScript files will be\nwritten.",
            "type": "string"
        }
    },
    "required": [
        "interchange",
        "sourceLocale",
        "targetLocales",
        "tsConfig",
        "tsOut"
    ],
    "type": "object"
}

